/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 macbook.glb -T
Files: macbook.glb [629.72KB] > /Users/adrianhajdin/Desktop/macbook_gsap_app/public/models/macbook-transformed.glb [627.9KB] (0%)
Author: jackbaeten (https://sketchfab.com/jackbaeten)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/macbook-pro-m3-16-inch-2024-8e34fc2b303144f78490007d91ff57c4
Title: macbook pro M3 16 inch 2024
*/

import type { } from '@react-three/drei';
import { useGLTF, useVideoTexture } from '@react-three/drei';
import type { JSX } from 'react';
import { useEffect } from 'react';
import { Color, Material, Mesh, Object3D } from "three";
import { noChangeParts } from "../../constants/index";
import useMacbookStore from "../../store/index";

interface GroupProps {
  [key: string]: unknown;
}

export default function MacbookModel(props: GroupProps): JSX.Element {
  const { color, texture, } = useMacbookStore();
  const { nodes, materials, scene } = useGLTF('/models/macbook-transformed.glb');

  const screen = useVideoTexture(texture);

  useEffect(() => {
    scene.traverse((child: Object3D) => {
      if ((child as Mesh).isMesh) {
        const mesh = child as Mesh;
        if (!noChangeParts.includes(mesh.name)) {
          const material = mesh.material as Material & { color?: Color; };
          if (material.color) {
            material.color = new Color(color);
          }
        }
      }
    });
  }, [color, scene]);

  return (
    <group {...props} dispose={null}>
      <mesh geometry={(nodes.Object_10 as Mesh).geometry} material={materials.PaletteMaterial001} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={(nodes.Object_16 as Mesh).geometry} material={materials.zhGRTuGrQoJflBD} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={(nodes.Object_20 as Mesh).geometry} material={materials.PaletteMaterial002} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={(nodes.Object_22 as Mesh).geometry} material={materials.lmWQsEjxpsebDlK} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={(nodes.Object_30 as Mesh).geometry} material={materials.LtEafgAVRolQqRw} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={(nodes.Object_32 as Mesh).geometry} material={materials.iyDJFXmHelnMTbD} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={(nodes.Object_34 as Mesh).geometry} material={materials.eJObPwhgFzvfaoZ} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={(nodes.Object_38 as Mesh).geometry} material={materials.nDsMUuDKliqGFdU} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={(nodes.Object_42 as Mesh).geometry} material={materials.CRQixVLpahJzhJc} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={(nodes.Object_48 as Mesh).geometry} material={materials.YYwBgwvcyZVOOAA} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={(nodes.Object_54 as Mesh).geometry} material={materials.SLGkCohDDelqXBu} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={(nodes.Object_58 as Mesh).geometry} material={materials.WnHKXHhScfUbJQi} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={(nodes.Object_66 as Mesh).geometry} material={materials.fNHiBfcxHUJCahl} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={(nodes.Object_74 as Mesh).geometry} material={materials.LpqXZqhaGCeSzdu} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={(nodes.Object_82 as Mesh).geometry} material={materials.gMtYExgrEUqPfln} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={(nodes.Object_96 as Mesh).geometry} material={materials.PaletteMaterial003} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={(nodes.Object_107 as Mesh).geometry} material={materials.JvMFZolVCdpPqjj} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={(nodes.Object_123 as Mesh).geometry} rotation={[Math.PI / 2, 0, 0]}>
        <meshBasicMaterial map={screen} />
      </mesh>
      <mesh geometry={(nodes.Object_127 as Mesh).geometry} material={materials.ZCDwChwkbBfITSW} rotation={[Math.PI / 2, 0, 0]} />
    </group>
  );
}

useGLTF.preload('/models/macbook-transformed.glb');